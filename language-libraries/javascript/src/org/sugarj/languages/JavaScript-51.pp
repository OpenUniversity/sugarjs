[
   Id                             -- _1,
   Num                            -- _1,
   HexNum                         -- _1,
   DoubleQuotedString             -- V  [V vs=2 [KW["\""] _1] KW["\""]],
   DoubleQuotedString.1:iter-star -- _1,
   SingleQuotedString             -- V  [V vs=2 [KW["'"] _1] KW["'"]],
   SingleQuotedString.1:iter-star -- _1,
   Identifier                     -- _1,
   NumericLiteral                 -- _1,
   StringLiteral                  -- _1,
   BlockStm                       -- _1,
   Block                          -- KW["{"] _1 KW["}"],
   StatementBlock                 -- _1 _2,
   StatementBlock.1:iter-star     -- _1,
   StatementBlock.2:opt           -- _1,
   VarStm                         -- V  [H  [KW["var"]] _1],
   VarStm.1:iter-sep              -- _1 KW[","],
   VarDec                         -- _1 _2,
   VarDec.2:opt                   -- _1,
   VarInit                        -- KW["="] _1,
   EmptyStm                       -- KW[";"],
   ExprStm                        -- _1,
   IfStm                          -- KW["if"] KW["("] _1 KW[")"] _2,
   IfStm                          -- KW["if"] KW["("] _1 KW[")"] _2 KW["else"] _3,
   DoStm                          -- KW["do"] _1 KW["while"] KW["("] _2 KW[")"],
   WhileStm                       -- KW["while"] KW["("] _1 KW[")"] _2,
   ForSmt                         -- KW["for"] KW["("] _1 KW[";"] _2 KW[";"] _3 KW[")"] _4,
   ForSmt.1:opt                   -- _1,
   ForSmt.2:opt                   -- _1,
   ForSmt.3:opt                   -- _1,
   ForSmt                         -- KW["for"] KW["("] KW["var"] _1 KW[";"] _2 KW[";"] _3 KW[")"] _4,
   ForSmt.1:iter-sep              -- _1 KW[","],
   ForSmt.2:opt                   -- _1,
   ForSmt.3:opt                   -- _1,
   ForInStm                       -- KW["for"] KW["("] _1 KW["in"] _2 KW[")"] _3,
   ForInStm                       -- KW["for"] KW["("] KW["var"] _1 KW["in"] _2 KW[")"] _3,
   ContinueStm                    -- KW["continue"],
   ContinueStm                    -- KW["continue"] _1,
   BreakStm                       -- KW["break"],
   BreakStm                       -- KW["break"] _1,
   ReturnStm                      -- KW["return"],
   ReturnStm                      -- KW["return"] _1,
   SwitchStm                      -- KW["switch"] KW["("] _1 KW[")"] _2,
   CaseBlock                      -- KW["{"] _1 KW["}"],
   Case                           -- KW["case"] _1 KW[":"] _2,
   Case.2:iter-star               -- _1,
   Default                        -- V  [H  [KW["default"] KW[":"]] _1],
   Default.1:iter-star            -- _1,
   CaseClauseBlock                -- _1 _2,
   CaseClauseBlock.1:iter-star    -- _1,
   CaseClauseBlock.2:opt          -- _1,
   LabelledStm                    -- _1 KW[":"] _2,
   ThrowStm                       -- KW["throw"] _1,
   TryStm                         -- KW["try"] _1 _2 _3,
   TryStm.2:opt                   -- _1,
   TryStm.3:opt                   -- _1,
   Catch                          -- KW["catch"] KW["("] _1 KW[")"] _2,
   Finally                        -- KW["finally"] _1,
   DebuggerStm                    -- KW["debugger"],
   WithSemi                       -- _1 KW[";"],
   AutoSemi                       -- _1 _2,
   FunDec                         -- KW["function"] _1 KW["("] _2 KW[")"] KW["{"] _3 KW["}"],
   FunDec.2:iter-star-sep         -- _1 KW[","],
   FunExp                         -- KW["function"] _1 KW["("] _2 KW[")"] KW["{"] _3 KW["}"],
   FunExp.1:opt                   -- _1,
   FunExp.2:iter-star-sep         -- _1 KW[","],
   FunBody                        -- _1,
   Program                        -- _1,
   SrcElems                       -- _1 _2,
   SrcElems.1:iter-star           -- _1,
   SrcElems.2:opt                 -- _1
]