definition

%% ECMA-262 ECMAScript 5.1
%% Missing full Unicode support
    
%% 7.4 Whitespace    
module languages/javascript-51/lexical/Whitespace
  exports
    
    lexical syntax
      [\ \t\n\11\12\r] -> LAYOUT
    
    lexical restrictions
      LAYOUT? -/- [\ \t\n\11\12\r]

%% 7.3 Line Terminators
module languages/javascript-51/lexical/LineTerminators
  exports
    
    sorts
      LineTerminatorSequence
    
    lexical syntax
      [\n]   -> LineTerminatorSequence
      CR     -> LineTerminatorSequence
      [\r\n] -> LineTerminatorSequence
      [\r]   -> CR
      
    lexical restrictions
      CR -/- [\n]
      
%% 7.4 Comments      
module languages/javascript-51/lexical/Comment
imports languages/javascript-51/lexical/LineTerminators

  exports
  
    lexical syntax
      "//" ~[\r\n]*                 -> LAYOUT
      "/*" (~[\*] | Asterisk)* "*/" -> LAYOUT
      [\*]                          -> Asterisk
      
    lexical restrictions
      Asterisk -/- [\/]

%% 7.6 Identifiers
%%     No Unicode escape support
module languages/javascript-51/lexical/Identifiers
imports languages/javascrip-51/lexical/ReservedWords

  exports
    
    sorts
      Identifier
      
    lexical syntax
      [A-Za-z\$\_] [A-Za-z0-9\$\_]* -> Identifier
      ReservedWord                  -> Identifier {reject}
    
    lexical restrictions
      Identifier -/- [A-Za-z0-9\$\_]
    
%% 7.6.1 Reserved Words
module languages/javascript-51/lexical/ReservedWords
imports languages/javascript-51/lexical/NullLiterals
        languages/javascript-51/lexical/BooleanLiterals

  exports
    
    sorts
      ReservedWord

    lexical syntax
      "break"      -> Keyword
      "case"       -> Keyword
      "catch"      -> Keyword
      "continue"   -> Keyword
      "debugger"   -> Keyword
      "default"    -> Keyword
      "delete"     -> Keyword
      "do"         -> Keyword
      "else"       -> Keyword
      "finally"    -> Keyword
      "for"        -> Keyword
      "function"   -> Keyword
      "if"         -> Keyword
      "in"         -> Keyword
      "instanceof" -> Keyword
      "new"        -> Keyword
      "return"     -> Keyword
      "switch"     -> Keyword
      "this"       -> Keyword
      "throw"      -> Keyword
      "try"        -> Keyword
      "typeof"     -> Keyword
      "var"        -> Keyword
      "void"       -> Keyword
      "while"      -> Keyword
      "with"       -> Keyword
      
      "class"      -> FutureReservedWord
      "const"      -> FutureReservedWord
      "enum"       -> FutureReservedWord
      "export"     -> FutureReservedWord
      "extends"    -> FutureReservedWord
      "import"     -> FutureReservedWord
      "super"      -> FutureReservedWord
      "implements" -> FutureReservedWord
      "interface"  -> FutureReservedWord
      "let"        -> FutureReservedWord
      "package"    -> FutureReservedWord
      "private"    -> FutureReservedWord
      "protected"  -> FutureReservedWord
      "public"     -> FutureReservedWord
      "static"     -> FutureReservedWord
      "yeild"      -> FutureReservedWord

      Keyword            -> ReservedWord
      FutureReservedWord -> ReservedWord
      NullLiteral        -> ReservedWord
      BooleanLiteral     -> ReserevdWord
      
      lexical restrictions
        Keyword FutureReservedWord -/- [A-Za-z0-9\$\_]
        
%% 7.8.1 Null Literals
module languages/javascript-51/lexical/NullLiterals
    exports
      sorts
        NullLiteral
        
      lexical syntax
        "null"    -> NullLiteral

      lexical restrictions
        NullLiteral -/- [A-Za-z0-9\$\_]
        
%% 7.8.2 Boolean Literals
module languages/javascript-51/lexical/BooleanLiterals
    exports
      sorts
        BooleanLiteral
      
      lexical syntax        
        "true"    -> BooleanLiteral
        "false"   -> BooleanLiteral

      lexical restrictions
        BooleanLiteral -/- [A-Za-z0-9\$\_]

%% 7.8.3 Numeric Literals
module languages/javascript-51/lexical/NumericLiterals
    exports
      sorts
        NumericLiteral
      
      lexical syntax
        DecimalLiteral    -> NumericLiteral
        HexIntegerLiteral -> NumericLiteral
                
        "0"         -> DecimalIntegerLiteral
        [1-9][0-9]* -> DecimalIntegerLiteral
        
        DecimalIntegerLiteral "." [0-9]* ExponentPart? -> DecimalLiteral
        "." [0-9]+ ExponentPart? -> DecimalLiteral
        DecimalIntegerLiteral ExponentPart? -> DecimalLiteral
        
        [eE] SignedInteger -> ExponentPart
        [\+\-]? [0-9]+ -> SignedInteger
        
        [0][xX][0-9a-fA-F]+ -> HexIntegerLiteral
        
        
        
        
      lexical restrictions
        DecimalIntegerLiteral DecimalLiteral SignedInteger -/- [0-9]
        HexIntegerLiteral -/- [0-9a-fA-F]
        
%% 7.8.4 String Literals
module languages/javascript-51/lexical/StringLiterals
imports languages/javascript-51/lexical/LineTerminators
    exports
      sorts
        StringLiteral
      
      context-free syntax
        "\"" DoubleStringChar* "\""   -> StringLiteral {cons("DoubleQuotedString")}
        "'" SingleStringChar* "'"  -> StringLiteral {cons("SingleQuotedString")}
        
      lexical syntax
        ~[\"\\\r\n] -> DoubleStringChar
        [\\] EscapeSequence -> DoubleStringChar
        [\\] LineTerminatorSequence -> DoubleStringChar
        
        ~[\'\\\r\n] -> SingleStringChar
        [\\] EscapeSequence -> SingleStringChar
        [\\] LineTerminatorSequence -> SingleStringChar
        
        Zero -> EscapeSequence
        ~[0-9xu\r\n] -> EscapeSequence
        [x][0-9a-fA-F][0-9a-fA-F] -> EscapeSequence
        [u][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F] -> EscapeSequence
        
        [0] -> Zero
        
      lexical restrictions
        Zero -/- [0-9]
        
 %% 7.8.5 regular Expression Literals
 %% TODO
 
 %% 11 Expressions
 module languages/javascript-51/Expressions
 imports 
   languages/javascript-51/lexical/Identifiers
   languages/javascript-51/lexical/ReservedWords
   languages/javascript-51/lexical/NullLiterals
   languages/javascript-51/lexical/BooleanLiterals
   languages/javascript-51/lexical/NumericLiterals
   languages/javascript-51/lexical/StringLiterals
   
    exports
      sorts
        Expression
     
      context-free syntax
        Identifier -> Expression {cons("Identifier")}
        NumericLiteral -> Expression {cons("NumericLiteral")}
        StringLiteral -> Expression {cons("StringLiteral")}

module languages/javascript-51/Statements
imports languages/javascript-51/Expressions
  exports
  
    sorts
      Statement ExpressionStatement ReturnStatement
    
    context-free syntax
      ExpressionStatement -> Statement
      ReturnStatement -> Statement
  
      Expression -> ExpressionStatement
  
      "return" -> ReturnStatement {cons("Return")}
      "return" Expression -> ReturnStatement {layout("1.first.line == 2.first.line"), cons("Return")}
       
module languages/javascript-51/Program
imports languages/javascript-51/Statements
  exports
  
    sorts
      Program SourceElements SourceElement
    
    context-free start-symbols
      Program
    
    context-free syntax
  
      SourceElements? -> Program {cons("Program")}
  
      SourceElement -> SourceElements {cons("SourceElement")}
      SourceElement ";" -> SourceElements {cons("SourceElement")}

      SourceElement ";" SourceElements -> SourceElements {cons("SourceElement")}
      SourceElement SourceElements -> SourceElements {layout("1.first.line < 2.first.line"), cons("SourceElement")}
  
      Statement -> SourceElement {longest-match}
  
 
module languages/javascript-51/Main
imports
  languages/javascript-51/Program
  languages/javascript-51/Statements
  languages/javascript-51/Expressions
  languages/javascript-51/lexical/StringLiterals
  languages/javascript-51/lexical/NumericLiterals
  languages/javascript-51/lexical/BooleanLiterals
  languages/javascript-51/lexical/NullLiterals
  languages/javascript-51/lexical/ReservedWords
  languages/javascript-51/lexical/Identifiers
  languages/javascript-51/lexical/Comments
  languages/javascript-51/lexical/LineTerminators
  languages/javascript-51/lexical/Whitespace
  
module JavaScript-51
imports 
  languages/javascript-51/Main
  
module org/sugarj/languages/JavaScript
imports JavaScript-51
  [ Program   =>    JavaScriptProgram
    SourceElements    => JavaScriptSourceElements
    SourceElement => JavaScriptSourceElement
    Statement => JavaScriptStatement
    ExpressionStatement => JavaScriptExressionStatement
    ReturnStatement => JavaScriptReturnStatement
    Expression => JavaScriptExpression
    ReservedWord => JavaScriptReservedWord
    Identifier => JavaScriptIdentifier
    NullLiteral => JavaScriptNullLiteral
    BooleanLiteral => JavaScriptBooleanLiteral
    LineTerminatorSequence => JavaScriptLineTerminatorSequence
    NumericLiteral => JavaScriptNumericLiteral
    StringLiteral => JavaScriptStringLiteral ]